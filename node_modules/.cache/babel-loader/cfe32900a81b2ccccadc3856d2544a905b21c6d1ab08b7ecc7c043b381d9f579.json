{"ast":null,"code":"var _jsxFileName = \"/Users/gentlepudding/workspace/vega-task/vega-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css'; //\nimport Dashboard from './components/Dashboard';\nimport Authorization from './components/Authorization';\nimport { useNavigate, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  // Simulated login check (this would normally call an API or use localStorage)\n  const handleLogin = (username, password) => {\n    const storedUsername = 'admin'; // Replace with real credentials\n    const storedPassword = '123'; // Replace with real credentials\n\n    if (username === storedUsername && password === storedPassword) {\n      setIsLoggedIn(true);\n      localStorage.setItem('authenticated', 'true'); // Store login status in localStorage\n      navigate('/dashboard');\n    } else {\n      alert('Invalid credentials. Please try again.');\n    }\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('authenticated');\n  };\n\n  // Check localStorage for login status on component mount\n  React.useEffect(() => {\n    const loggedInStatus = localStorage.getItem('authenticated');\n    if (loggedInStatus === 'true') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Authorization, {\n    setLogin: handleLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Dashboard","Authorization","useNavigate","Route","Routes","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","navigate","handleLogin","username","password","storedUsername","storedPassword","localStorage","setItem","alert","handleLogout","removeItem","useEffect","loggedInStatus","getItem","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","setLogin","_c","$RefreshReg$"],"sources":["/Users/gentlepudding/workspace/vega-task/vega-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //\nimport Dashboard from './components/Dashboard';\nimport Authorization from './components/Authorization';\nimport { useNavigate, Route, Routes } from 'react-router-dom';\n\nconst App: React.FC = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  // Simulated login check (this would normally call an API or use localStorage)\n  const handleLogin = (username: string, password: string) => {\n    const storedUsername = 'admin'; // Replace with real credentials\n    const storedPassword = '123'; // Replace with real credentials\n\n    if (username === storedUsername && password === storedPassword) {\n      setIsLoggedIn(true);\n      localStorage.setItem('authenticated', 'true'); // Store login status in localStorage\n      navigate('/dashboard');\n    } else {\n      alert('Invalid credentials. Please try again.');\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('authenticated');\n  };\n\n  // Check localStorage for login status on component mount\n  React.useEffect(() => {\n    const loggedInStatus = localStorage.getItem('authenticated');\n    if (loggedInStatus === 'true') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  if (isLoggedIn) {\n    return (\n      <div>\n        <Routes>\n          <Route\n            path='/dashboard'\n            element={<Dashboard />}\n          />\n    </Routes>\n      </div>\n    );\n  }\n\n  return (\n    <Authorization\n      setLogin={handleLogin}\n    />\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,aAAa,CAAC,CAAC;AACtB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,WAAW,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,WAAW,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,MAAMC,cAAc,GAAG,OAAO,CAAC,CAAC;IAChC,MAAMC,cAAc,GAAG,KAAK,CAAC,CAAC;;IAE9B,IAAIH,QAAQ,KAAKE,cAAc,IAAID,QAAQ,KAAKE,cAAc,EAAE;MAC9DN,aAAa,CAAC,IAAI,CAAC;MACnBO,YAAY,CAACC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC;MAC/CP,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM;MACLQ,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBV,aAAa,CAAC,KAAK,CAAC;IACpBO,YAAY,CAACI,UAAU,CAAC,eAAe,CAAC;EAC1C,CAAC;;EAED;EACAvB,KAAK,CAACwB,SAAS,CAAC,MAAM;IACpB,MAAMC,cAAc,GAAGN,YAAY,CAACO,OAAO,CAAC,eAAe,CAAC;IAC5D,IAAID,cAAc,KAAK,MAAM,EAAE;MAC7Bb,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,UAAU,EAAE;IACd,oBACEH,OAAA;MAAAmB,QAAA,eACEnB,OAAA,CAACF,MAAM;QAAAqB,QAAA,eACLnB,OAAA,CAACH,KAAK;UACJuB,IAAI,EAAC,YAAY;UACjBC,OAAO,eAAErB,OAAA,CAACN,SAAS;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV;EAEA,oBACEzB,OAAA,CAACL,aAAa;IACZ+B,QAAQ,EAAEpB;EAAY;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEN,CAAC;AAACvB,EAAA,CAjDID,GAAa;EAAA,QAEAL,WAAW;AAAA;AAAA+B,EAAA,GAFxB1B,GAAa;AAmDnB,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}