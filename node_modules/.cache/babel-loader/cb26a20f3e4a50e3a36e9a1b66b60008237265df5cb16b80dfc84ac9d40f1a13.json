{"ast":null,"code":"var _jsxFileName = \"/Users/gentlepudding/workspace/vega-task/vega-app/src/components/Authorization.tsx\";\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Authorization } from './Authorization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('Authorization Component', () => {\n  test('renders login form and handles login', () => {\n    // Mock setLogin function\n    const mockSetLogin = jest.fn();\n\n    // Render the component\n    render(/*#__PURE__*/_jsxDEV(Authorization, {\n      setLogin: mockSetLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this));\n\n    // Get form elements\n    const usernameInput = screen.getByLabelText(/Username/i);\n    const passwordInput = screen.getByLabelText(/Password/i);\n    const loginButton = screen.getByText(/Log In/i);\n\n    // Check if the elements are in the document\n    expect(usernameInput).toBeInTheDocument();\n    expect(passwordInput).toBeInTheDocument();\n    expect(loginButton).toBeInTheDocument();\n\n    // Simulate typing into username and password inputs\n    fireEvent.change(usernameInput, {\n      target: {\n        value: 'testUser'\n      }\n    });\n    fireEvent.change(passwordInput, {\n      target: {\n        value: 'testPassword'\n      }\n    });\n\n    // Click the login button\n    fireEvent.click(loginButton);\n\n    // Check if setLogin was called with correct values\n    expect(mockSetLogin).toHaveBeenCalledTimes(1);\n    expect(mockSetLogin).toHaveBeenCalledWith('testUser', 'testPassword');\n  });\n});","map":{"version":3,"names":["React","render","screen","fireEvent","Authorization","jsxDEV","_jsxDEV","describe","test","mockSetLogin","jest","fn","setLogin","fileName","_jsxFileName","lineNumber","columnNumber","usernameInput","getByLabelText","passwordInput","loginButton","getByText","expect","toBeInTheDocument","change","target","value","click","toHaveBeenCalledTimes","toHaveBeenCalledWith"],"sources":["/Users/gentlepudding/workspace/vega-task/vega-app/src/components/Authorization.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Authorization } from './Authorization';\n\ndescribe('Authorization Component', () => {\n  test('renders login form and handles login', () => {\n    // Mock setLogin function\n    const mockSetLogin = jest.fn();\n\n    // Render the component\n    render(<Authorization setLogin={mockSetLogin} />);\n\n    // Get form elements\n    const usernameInput = screen.getByLabelText(/Username/i);\n    const passwordInput = screen.getByLabelText(/Password/i);\n    const loginButton = screen.getByText(/Log In/i);\n\n    // Check if the elements are in the document\n    expect(usernameInput).toBeInTheDocument();\n    expect(passwordInput).toBeInTheDocument();\n    expect(loginButton).toBeInTheDocument();\n\n    // Simulate typing into username and password inputs\n    fireEvent.change(usernameInput, { target: { value: 'testUser' } });\n    fireEvent.change(passwordInput, { target: { value: 'testPassword' } });\n\n    // Click the login button\n    fireEvent.click(loginButton);\n\n    // Check if setLogin was called with correct values\n    expect(mockSetLogin).toHaveBeenCalledTimes(1);\n    expect(mockSetLogin).toHaveBeenCalledWith('testUser', 'testPassword');\n  });\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,wBAAwB;AAClE,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhDC,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxCC,IAAI,CAAC,sCAAsC,EAAE,MAAM;IACjD;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;;IAE9B;IACAV,MAAM,cAACK,OAAA,CAACF,aAAa;MAACQ,QAAQ,EAAEH;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;;IAEjD;IACA,MAAMC,aAAa,GAAGf,MAAM,CAACgB,cAAc,CAAC,WAAW,CAAC;IACxD,MAAMC,aAAa,GAAGjB,MAAM,CAACgB,cAAc,CAAC,WAAW,CAAC;IACxD,MAAME,WAAW,GAAGlB,MAAM,CAACmB,SAAS,CAAC,SAAS,CAAC;;IAE/C;IACAC,MAAM,CAACL,aAAa,CAAC,CAACM,iBAAiB,CAAC,CAAC;IACzCD,MAAM,CAACH,aAAa,CAAC,CAACI,iBAAiB,CAAC,CAAC;IACzCD,MAAM,CAACF,WAAW,CAAC,CAACG,iBAAiB,CAAC,CAAC;;IAEvC;IACApB,SAAS,CAACqB,MAAM,CAACP,aAAa,EAAE;MAAEQ,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAW;IAAE,CAAC,CAAC;IAClEvB,SAAS,CAACqB,MAAM,CAACL,aAAa,EAAE;MAAEM,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAe;IAAE,CAAC,CAAC;;IAEtE;IACAvB,SAAS,CAACwB,KAAK,CAACP,WAAW,CAAC;;IAE5B;IACAE,MAAM,CAACb,YAAY,CAAC,CAACmB,qBAAqB,CAAC,CAAC,CAAC;IAC7CN,MAAM,CAACb,YAAY,CAAC,CAACoB,oBAAoB,CAAC,UAAU,EAAE,cAAc,CAAC;EACvE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}